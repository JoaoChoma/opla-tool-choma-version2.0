/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ufpr.br.opla.gui2;

import java.util.HashMap;
import java.util.Map;
import java.util.SortedMap;
import javax.swing.JTable;

/**
 *
 * @author elf
 */
public class SmallerFintnessValuesWindow extends javax.swing.JFrame {
  private String selectedExperiment;

  /**
   * Creates new form SmallerFintnessValuesWindow
   */
  public SmallerFintnessValuesWindow() {
    initComponents();
    panelEleganceBest.setVisible(false);
    panelConventionalBest.setVisible(false);
    panelFeatureDriven.setVisible(false);
    panelPlaExtBest.setVisible(false);
    
    GuiUtils.makeTableNotEditable(tableEleganceBest);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEleganceBest = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEleganceBest = new javax.swing.JTable();
        panelConventionalBest = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableConventionalBest = new javax.swing.JTable();
        panelPlaExtBest = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablePLAExtBest = new javax.swing.JTable();
        panelFeatureDriven = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableFeatureDrivenBest = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        textAreaObjectives = new javax.swing.JEditorPane("text/html", "");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelEleganceBest.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelEleganceBest.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Elegance");

        tableEleganceBest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableEleganceBest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEleganceBestMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEleganceBest);

        org.jdesktop.layout.GroupLayout panelEleganceBestLayout = new org.jdesktop.layout.GroupLayout(panelEleganceBest);
        panelEleganceBest.setLayout(panelEleganceBestLayout);
        panelEleganceBestLayout.setHorizontalGroup(
            panelEleganceBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelEleganceBestLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(panelEleganceBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 343, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelEleganceBestLayout.setVerticalGroup(
            panelEleganceBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelEleganceBestLayout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(35, 35, 35))
        );

        panelConventionalBest.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Conventional Metrics");

        tableConventionalBest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableConventionalBest);

        org.jdesktop.layout.GroupLayout panelConventionalBestLayout = new org.jdesktop.layout.GroupLayout(panelConventionalBest);
        panelConventionalBest.setLayout(panelConventionalBestLayout);
        panelConventionalBestLayout.setHorizontalGroup(
            panelConventionalBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelConventionalBestLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelConventionalBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panelConventionalBestLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel2))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelConventionalBestLayout.setVerticalGroup(
            panelConventionalBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelConventionalBestLayout.createSequentialGroup()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        panelPlaExtBest.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("PLA-Extensibiliy");

        tablePLAExtBest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tablePLAExtBest);

        org.jdesktop.layout.GroupLayout panelPlaExtBestLayout = new org.jdesktop.layout.GroupLayout(panelPlaExtBest);
        panelPlaExtBest.setLayout(panelPlaExtBestLayout);
        panelPlaExtBestLayout.setHorizontalGroup(
            panelPlaExtBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelPlaExtBestLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(panelPlaExtBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 345, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelPlaExtBestLayout.setVerticalGroup(
            panelPlaExtBestLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelPlaExtBestLayout.createSequentialGroup()
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 17, Short.MAX_VALUE))
        );

        panelFeatureDriven.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Feature-driven Metrics");

        tableFeatureDrivenBest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tableFeatureDrivenBest);

        org.jdesktop.layout.GroupLayout panelFeatureDrivenLayout = new org.jdesktop.layout.GroupLayout(panelFeatureDriven);
        panelFeatureDriven.setLayout(panelFeatureDrivenLayout);
        panelFeatureDrivenLayout.setHorizontalGroup(
            panelFeatureDrivenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, panelFeatureDrivenLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelFeatureDrivenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(panelFeatureDrivenLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel4)))
                .addContainerGap())
        );
        panelFeatureDrivenLayout.setVerticalGroup(
            panelFeatureDrivenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelFeatureDrivenLayout.createSequentialGroup()
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 12, Short.MAX_VALUE))
        );

        jScrollPane6.setViewportView(textAreaObjectives);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 288, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(panelEleganceBest, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(panelPlaExtBest, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(panelFeatureDriven, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(panelConventionalBest, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(476, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(panelEleganceBest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(panelConventionalBest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(panelPlaExtBest, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(panelFeatureDriven, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void tableEleganceBestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEleganceBestMouseClicked
    if (evt.getClickCount() == 2) {
      JTable target = (JTable) evt.getSource();
      String selectedSolutionId = target.getModel().getValueAt(target.getSelectedRow(), 0).toString();
      HashMap<String, String> result = db.Database.getObjectivesBySolutionId(selectedSolutionId, selectedExperiment);
      textAreaObjectives.setText("");
      for (Map.Entry<String, String> entry : result.entrySet()) {
        textAreaObjectives.setText(textAreaObjectives.getText() + "<b>"+entry.getKey() + "</b>:" + entry.getValue() +"\n");
        
        
      }

    }
  }//GEN-LAST:event_tableEleganceBestMouseClicked

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the
     * default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(SmallerFintnessValuesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(SmallerFintnessValuesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(SmallerFintnessValuesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(SmallerFintnessValuesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        new SmallerFintnessValuesWindow().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel panelConventionalBest;
    private javax.swing.JPanel panelEleganceBest;
    private javax.swing.JPanel panelFeatureDriven;
    private javax.swing.JPanel panelPlaExtBest;
    private javax.swing.JTable tableConventionalBest;
    private javax.swing.JTable tableEleganceBest;
    private javax.swing.JTable tableFeatureDrivenBest;
    private javax.swing.JTable tablePLAExtBest;
    private javax.swing.JEditorPane textAreaObjectives;
    // End of variables declaration//GEN-END:variables

  void setExperimentId(String selectedExperiment) {
    this.selectedExperiment = selectedExperiment;
  }
 

  public void enablePanelsObjectiveFunctions() {
    String metricsSelectedForCurrentExperiment[] =
            db.Database.getOrdenedObjectives(this.selectedExperiment).split(" ");
    

        
    for (int i = 0; i < metricsSelectedForCurrentExperiment.length; i++) {
      String f = metricsSelectedForCurrentExperiment[i];
      if(f.equalsIgnoreCase("elegance")){
        intializeContentForEleganceTable();
        panelEleganceBest.setVisible(true);        
      }
      if(f.equalsIgnoreCase("conventional")){
        initializeContentForEleganceTable();
        panelConventionalBest.setVisible(true);
      }
      if(f.equalsIgnoreCase("PLAExtensibility")){
        initializeContentForPLAExtTable();
        panelPlaExtBest.setVisible(true);
      }
      if(f.equalsIgnoreCase("featureDriven")){
        initializeContentForFeatureDrivenTable();
        panelFeatureDriven.setVisible(true);
      }
      
    }
  }

  private void intializeContentForEleganceTable() {    
    SortedMap<String, Double> content = BestSolutionBySelectedFitness.calculateBestElegance(
                                                                 selectedExperiment);
    BestSolutionBySelectedFitness.buildTable(tableEleganceBest, content);
  }

  private void initializeContentForFeatureDrivenTable() {
    BestSolutionBySelectedFitness.buildTable(tableFeatureDrivenBest,
            BestSolutionBySelectedFitness.calculateBestFeatureDriven(selectedExperiment));
  }

  private void initializeContentForEleganceTable() {
    BestSolutionBySelectedFitness.buildTable(tableConventionalBest,
            BestSolutionBySelectedFitness.calculateBestConventional(selectedExperiment));
  }

  private void initializeContentForPLAExtTable() {
    BestSolutionBySelectedFitness.buildTable(tablePLAExtBest,
            BestSolutionBySelectedFitness.calculateBestPlaExt(selectedExperiment));
  }
}
